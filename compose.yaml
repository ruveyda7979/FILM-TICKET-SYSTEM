version: '3.8'

services:
  postgres-user:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user_user
      POSTGRES_PASSWORD: user_password
      POSTGRES_DB: user_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_user_data:/var/lib/postgresql/data
    networks:
      - app-network

  postgres-movie:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: movie_user
      POSTGRES_PASSWORD: movie_password
      POSTGRES_DB: movie_db
    ports:
      - "5434:5432"
    volumes:
      - postgres_movie_data:/var/lib/postgresql/data
    networks:
      - app-network

  postgres-booking:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: booking_user
      POSTGRES_PASSWORD: booking_password
      POSTGRES_DB: booking_db
    ports:
      - "5435:5432"
    volumes:
      - postgres_booking_data:/var/lib/postgresql/data
    networks:
      - app-network

  eureka-server:
    build:
      context: ./eureka-server
      dockerfile: Dockerfile
    ports:
      - '8761:8761'
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/eureka"]
      interval: 30s
      timeout: 10s
      retries: 3

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    environment:
      - 'EUREKA_SERVER_URL=http://eureka-server:8761/eureka'
    depends_on:
      - eureka-server
    networks:
      - app-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    deploy:
      replicas: 2
#    ports:
#      - '8085:8085'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-user:5432/user_db
      SPRING_DATASOURCE_USERNAME: user_user
      SPRING_DATASOURCE_PASSWORD: user_password
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - postgres-user
    networks:
      - app-network

  movie-service:
    build:
      context: ./movie-service
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    ports:
      - '8082:8082'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-movie:5432/movie_db
      SPRING_DATASOURCE_USERNAME: movie_user
      SPRING_DATASOURCE_PASSWORD: movie_password
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - postgres-movie
    networks:
      - app-network

  booking-service:
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    deploy:
      replicas: 2
    ports:
      - '8083:8083'
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-booking:5432/booking_db
      SPRING_DATASOURCE_USERNAME: booking_user
      SPRING_DATASOURCE_PASSWORD: booking_password
      EUREKA_SERVER_URL: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
      - postgres-booking
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_user_data:
  postgres_movie_data:
  postgres_booking_data: